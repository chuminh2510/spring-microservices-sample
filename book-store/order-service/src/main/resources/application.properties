server.servlet.context-path=/
server.port=8080
spring.application.name=order-service
#Datasource configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/orders
spring.datasource.username=order
spring.datasource.password=postgres
#spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
#spring.datasource.username=${POSTGRES_USER}
#spring.datasource.password=${POSTGRES_PASSWORD}
#flyway configuration
spring.flyway.enabled=true
#Eureka configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.client.service-url.defaultZone=http://${EUREKA_HOST}:8761/eureka
eureka.instance.prefer-ip-address=true
eureka.client.webclient.enabled=true
#Kafka configuration
##Below line is not necessary because of default from Spring boot
#spring.kafka.bootstrap-servers=${KAFKA_HOST}
spring.kafka.bootstrap-servers=localhost:30022
#spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}:9092
#spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}:9092
#spring.kafka.bootstrap-servers=${KAFKA_HOST}:9092
#spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}:9092
#spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}:9092
# Cloud stream configuration
spring.cloud.stream.function.definition=supplier;consumer
spring.cloud.stream.bindings.supplier-out-0.destination=order-created
spring.cloud.stream.bindings.consumer-in-0.destination=order-updated
